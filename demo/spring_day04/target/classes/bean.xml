<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--配置spring创建容器时需要扫描的包-->
    <context:component-scan base-package="com.pdd"></context:component-scan>
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

    <!--spring中基于XML的声明式
        1 配置事务管理器
        2 配置事务的通知
            此时需要导入事务的约束，tx名称空间和约束，同时也需要aop对
            使用tx:advice标签配置事务通知：id唯一标识，transaction-manager给事务通知提供一个事务管理器
        3 配置aop中对通用切入点表达式
        4 建立事务通知和切入点对对应关系
        5 配置事务的属性：tx:advice内部
    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--开始spring对注解事务对支持-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    <!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--        &lt;!&ndash;配置事务对属性：-->
    <!--            isolation="" 事务隔离级别-->
    <!--            read-only="" 用于指定事务是否制度，只有查询方法才可以设置为true。默认是false，表示读写-->
    <!--            propagation=""用于事务对传播行为。默认是REQUIRED，表示一定会有事务，增删改的选择。查询方法可以选择SUPPORTS。-->
    <!--            timeout=""事务的超时时间，默认为-1，秒为党委-->
    <!--            rollback-for=""用于指定一个一次，当产生该异常时，事务回滚，产生其他异常时，事务不回滚。没有默认值。表示任何异常都回滚-->
    <!--            no-rollback-for=""用于指定一个异常，当产生该异常时，事务不回滚。-->
    <!--            &ndash;&gt;-->
    <!--        <tx:attributes>-->
    <!--            <tx:method name="transfer" propagation="REQUIRED" read-only="false"/>-->
    <!--            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>-->
    <!--        </tx:attributes>-->
    <!--    </tx:advice>-->
    <!--    <aop:config>-->
    <!--        <aop:pointcut id="pt1" expression="execution(* com.pdd.service.impl.*.*(..))"/>-->
    <!--        &lt;!&ndash;建立切入点表达式和事务通知对对应关系&ndash;&gt;-->
    <!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>-->
    <!--    </aop:config>-->
    <!--    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
    <!--        <property name="dataSource" ref="dataSource"></property>-->
    <!--    </bean>-->

    <!-- 配置srping的Ioc,把service对象配置进来-->
    <!--    <bean id="accountService" class="com.pdd.service.impl.AccountServiceImpl">-->
    <!--        <property name="accountDao" ref="accountDao"></property>-->
    <!--    </bean>-->

    <!--    <bean id="accountDao" class="com.pdd.dao.impl.AccountDaoImpl">-->
    <!--        <property name="runner" ref="runner"></property>-->
    <!--    </bean>-->

<!--    <bean id="runner" class="org.apache.commons.dbutils.QueryRunner">-->
<!--        <constructor-arg name="ds" ref="dataSource"></constructor-arg>-->
<!--    </bean>-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/test"></property>
        <property name="user" value="root"></property>
        <property name="password" value="root"></property>
    </bean>
    <!--    <bean id="connectionUtils" class="com.pdd.utils.ConnectionUtils">-->
    <!--        <property name="dataSource" ref="dataSource"></property>-->
    <!--    </bean>-->

    <!--    <bean id="transactionManager" class="com.pdd.utils.TransactionManager">-->
    <!--        <property name="connectionUtils" ref="connectionUtils"></property>-->
    <!--    </bean>-->
    <!--    <bean id="logger" class="com.pdd.utils.logger"></bean>-->
    <!--    <aop:config>-->
    <!--        <aop:pointcut id="pp" expression="execution(* com.pdd.service.impl.*.*(..))"/>-->
    <!--        <aop:aspect id="txAdvice" ref="transactionManager">-->
    <!--            <aop:before method="startTransaction" pointcut-ref="pp"></aop:before>-->
    <!--            <aop:after-returning method="commitTransaction" pointcut-ref="pp"></aop:after-returning>-->
    <!--            <aop:after method="releaseTransaction" pointcut-ref="pp"></aop:after>-->
    <!--            <aop:after-throwing method="rollBackTransaction" pointcut-ref="pp"></aop:after-throwing>-->
    <!--        </aop:aspect>-->
    <!--    </aop:config>-->
</beans>